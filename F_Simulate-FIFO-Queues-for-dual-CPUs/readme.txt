簡介：

主旨:
使用者有兩種cpu模擬的執行政策，1為SQF(Shortest Queue First)與2為EQF(Earlist Queue First)。
第一種以"平均延遲長度"的方式判斷該檔案是否應該進入佇列且是否能夠被執行。
第二種以"成功執行比例"的方式判斷該檔案是否應該進入佇列且是否能成功執行。

假設:
若兩者cpu皆為閒置狀態，選擇cpu1。
若有任一閒置狀態之cpu， 則選之執行。
若兩者之cpu皆非閒置狀態，
    SQF:比較佇列長度，選擇短的佇列進入執行等待。
    EQF:比較當前完成時間，選擇較快執行完畢之佇列進入等待。

SQF:
    優點:因為都是挑任一較短的佇列進入等待，有較多的空位，原則上成功執行的比例將會比較高。
    缺點:因為沒有特定哪一邊，所以可能會被一項處理超級久的資料卡住一個cpu，使後面之資料延遲時間拖比較多。
EQF:
    優點:由於每次都選較快處理完畢的佇列進入等待，所以延遲時間並不會等太久，可以較快的執行到資料。
    缺點:很容易因為一個cpu被塞住，以至於當另一個cpu佇列滿了以後，只能捨棄掉當前資料，所以成功執行比例較低。
結論: 
    1.兩種方各有優缺，我認為可以併用兩種方法執行，當預知其中之一的cpu被塞住時，使用EQF之執行方式以減少延遲時間，當正常順暢通行時，則使用SQF之執行方式，讓捨棄之資料可以大幅減少。
    2.若遇到需要執行耗時太長的，秒放棄可以大幅提高效率呢!